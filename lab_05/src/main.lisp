(defun number-to-string (number)
    (if (complexp number)
        (format nil "~,2f + ~,2fi" (realpart number) (imagpart number))
        (format nil "~,2f" number))
)

(defun print-roots (x1 x2)
    (if (= x1 x2)
        (format nil "X = ~a" (number-to-string x1))
        (format nil "X1 = ~a | X2 = ~a" (number-to-string x1) (number-to-string x2)))
)

(defun solve-quadratic-eq (a b c)
    (if (= a 0)
        (if (= b 0)
            (if (= c 0)
                (string "Any number")
                (string "No roots"))
            (if (= c 0)
                (print-roots 0 0)
                (print-roots (/ c (- b)) (/ c (- b)))))
        (if (= b 0)
            (if (= c 0)
                (print-roots 0 0)
                (let ((r (/ (- c) a)))
                    (if (>= r 0)
                        (print-roots (sqrt r) (- (sqrt r)))
                        (string "No roots"))))
        (let* ((D (- (* b b) (* 4 a c)))
               (r1 (/ (+ (- b) (sqrt D)) (* 2 a)))
               (r2 (/ (- (- b) (sqrt D)) (* 2 a))))
                    (print-roots r1 r2)))))
(print-roots (solve 6 4 1))